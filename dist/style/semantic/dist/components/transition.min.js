"use strict";

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*!
 * # Semantic UI 2.2.10 - Transition
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */
!function (n, e, i, t) {
  "use strict";
  e = "undefined" != typeof e && e.Math == Math ? e : "undefined" != typeof self && self.Math == Math ? self : Function("return this")(), n.fn.transition = function () {
    var a,
        o = n(this),
        r = o.selector || "",
        s = new Date().getTime(),
        l = [],
        u = arguments,
        d = u[0],
        c = [].slice.call(arguments, 1),
        m = "string" == typeof d;e.requestAnimationFrame || e.mozRequestAnimationFrame || e.webkitRequestAnimationFrame || e.msRequestAnimationFrame || function (n) {
      setTimeout(n, 0);
    };return o.each(function (e) {
      var f,
          p,
          g,
          v,
          b,
          y,
          h,
          w,
          C,
          A = n(this),
          S = this;C = { initialize: function initialize() {
          f = C.get.settings.apply(S, u), v = f.className, g = f.error, b = f.metadata, w = "." + f.namespace, h = "module-" + f.namespace, p = A.data(h) || C, y = C.get.animationEndEvent(), m && (m = C.invoke(d)), m === !1 && (C.verbose("Converted arguments into settings object", f), f.interval ? C.delay(f.animate) : C.animate(), C.instantiate());
        }, instantiate: function instantiate() {
          C.verbose("Storing instance of module", C), p = C, A.data(h, p);
        }, destroy: function destroy() {
          C.verbose("Destroying previous module for", S), A.removeData(h);
        }, refresh: function refresh() {
          C.verbose("Refreshing display type on next animation"), delete C.displayType;
        }, forceRepaint: function forceRepaint() {
          C.verbose("Forcing element repaint");var n = A.parent(),
              e = A.next();0 === e.length ? A.detach().appendTo(n) : A.detach().insertBefore(e);
        }, repaint: function repaint() {
          C.verbose("Repainting element");S.offsetWidth;
        }, delay: function delay(n) {
          var i,
              a,
              r = C.get.animationDirection();r || (r = C.can.transition() ? C.get.direction() : "static"), n = n !== t ? n : f.interval, i = "auto" == f.reverse && r == v.outward, a = i || 1 == f.reverse ? (o.length - e) * f.interval : e * f.interval, C.debug("Delaying animation by", a), setTimeout(C.animate, a);
        }, animate: function animate(n) {
          if (f = n || f, !C.is.supported()) return C.error(g.support), !1;if (C.debug("Preparing animation", f.animation), C.is.animating()) {
            if (f.queue) return !f.allowRepeats && C.has.direction() && C.is.occurring() && C.queuing !== !0 ? C.debug("Animation is currently occurring, preventing queueing same animation", f.animation) : C.queue(f.animation), !1;if (!f.allowRepeats && C.is.occurring()) return C.debug("Animation is already occurring, will not execute repeated animation", f.animation), !1;C.debug("New animation started, completing previous early", f.animation), p.complete();
          }C.can.animate() ? C.set.animating(f.animation) : C.error(g.noAnimation, f.animation, S);
        }, reset: function reset() {
          C.debug("Resetting animation to beginning conditions"), C.remove.animationCallbacks(), C.restore.conditions(), C.remove.animating();
        }, queue: function queue(n) {
          C.debug("Queueing animation of", n), C.queuing = !0, A.one(y + ".queue" + w, function () {
            C.queuing = !1, C.repaint(), C.animate.apply(this, f);
          });
        }, complete: function complete(n) {
          C.debug("Animation complete", f.animation), C.remove.completeCallback(), C.remove.failSafe(), C.is.looping() || (C.is.outward() ? (C.verbose("Animation is outward, hiding element"), C.restore.conditions(), C.hide()) : C.is.inward() ? (C.verbose("Animation is outward, showing element"), C.restore.conditions(), C.show()) : (C.verbose("Static animation completed"), C.restore.conditions(), f.onComplete.call(S)));
        }, force: { visible: function visible() {
            var n = A.attr("style"),
                e = C.get.userStyle(),
                i = C.get.displayType(),
                a = e + "display: " + i + " !important;",
                o = A.css("display"),
                r = n === t || "" === n;o !== i ? (C.verbose("Overriding default display to show element", i), A.attr("style", a)) : r && A.removeAttr("style");
          }, hidden: function hidden() {
            var n = A.attr("style"),
                e = A.css("display"),
                i = n === t || "" === n;"none" === e || C.is.hidden() ? i && A.removeAttr("style") : (C.verbose("Overriding default display to hide element"), A.css("display", "none"));
          } }, has: { direction: function direction(e) {
            var i = !1;return e = e || f.animation, "string" == typeof e && (e = e.split(" "), n.each(e, function (n, e) {
              e !== v.inward && e !== v.outward || (i = !0);
            })), i;
          }, inlineDisplay: function inlineDisplay() {
            var e = A.attr("style") || "";return n.isArray(e.match(/display.*?;/, ""));
          } }, set: { animating: function animating(n) {
            var e;C.remove.completeCallback(), n = n || f.animation, e = C.get.animationClass(n), C.save.animation(e), C.force.visible(), C.remove.hidden(), C.remove.direction(), C.start.animation(e);
          }, duration: function duration(n, e) {
            e = e || f.duration, e = "number" == typeof e ? e + "ms" : e, (e || 0 === e) && (C.verbose("Setting animation duration", e), A.css({ "animation-duration": e }));
          }, direction: function direction(n) {
            n = n || C.get.direction(), n == v.inward ? C.set.inward() : C.set.outward();
          }, looping: function looping() {
            C.debug("Transition set to loop"), A.addClass(v.looping);
          }, hidden: function hidden() {
            A.addClass(v.transition).addClass(v.hidden);
          }, inward: function inward() {
            C.debug("Setting direction to inward"), A.removeClass(v.outward).addClass(v.inward);
          }, outward: function outward() {
            C.debug("Setting direction to outward"), A.removeClass(v.inward).addClass(v.outward);
          }, visible: function visible() {
            A.addClass(v.transition).addClass(v.visible);
          } }, start: { animation: function animation(n) {
            n = n || C.get.animationClass(), C.debug("Starting tween", n), A.addClass(n).one(y + ".complete" + w, C.complete), f.useFailSafe && C.add.failSafe(), C.set.duration(f.duration), f.onStart.call(S);
          } }, save: { animation: function animation(n) {
            C.cache || (C.cache = {}), C.cache.animation = n;
          }, displayType: function displayType(n) {
            "none" !== n && A.data(b.displayType, n);
          }, transitionExists: function transitionExists(e, i) {
            n.fn.transition.exists[e] = i, C.verbose("Saving existence of transition", e, i);
          } }, restore: { conditions: function conditions() {
            var n = C.get.currentAnimation();n && (A.removeClass(n), C.verbose("Removing animation class", C.cache)), C.remove.duration();
          } }, add: { failSafe: function failSafe() {
            var n = C.get.duration();C.timer = setTimeout(function () {
              A.triggerHandler(y);
            }, n + f.failSafeDelay), C.verbose("Adding fail safe timer", C.timer);
          } }, remove: { animating: function animating() {
            A.removeClass(v.animating);
          }, animationCallbacks: function animationCallbacks() {
            C.remove.queueCallback(), C.remove.completeCallback();
          }, queueCallback: function queueCallback() {
            A.off(".queue" + w);
          }, completeCallback: function completeCallback() {
            A.off(".complete" + w);
          }, display: function display() {
            A.css("display", "");
          }, direction: function direction() {
            A.removeClass(v.inward).removeClass(v.outward);
          }, duration: function duration() {
            A.css("animation-duration", "");
          }, failSafe: function failSafe() {
            C.verbose("Removing fail safe timer", C.timer), C.timer && clearTimeout(C.timer);
          }, hidden: function hidden() {
            A.removeClass(v.hidden);
          }, visible: function visible() {
            A.removeClass(v.visible);
          }, looping: function looping() {
            C.debug("Transitions are no longer looping"), C.is.looping() && (C.reset(), A.removeClass(v.looping));
          }, transition: function transition() {
            A.removeClass(v.visible).removeClass(v.hidden);
          } }, get: { settings: function settings(e, i, t) {
            return "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? n.extend(!0, {}, n.fn.transition.settings, e) : "function" == typeof t ? n.extend({}, n.fn.transition.settings, { animation: e, onComplete: t, duration: i }) : "string" == typeof i || "number" == typeof i ? n.extend({}, n.fn.transition.settings, { animation: e, duration: i }) : "object" == (typeof i === "undefined" ? "undefined" : _typeof(i)) ? n.extend({}, n.fn.transition.settings, i, { animation: e }) : "function" == typeof i ? n.extend({}, n.fn.transition.settings, { animation: e, onComplete: i }) : n.extend({}, n.fn.transition.settings, { animation: e });
          }, animationClass: function animationClass(n) {
            var e = n || f.animation,
                i = C.can.transition() && !C.has.direction() ? C.get.direction() + " " : "";return v.animating + " " + v.transition + " " + i + e;
          }, currentAnimation: function currentAnimation() {
            return C.cache && C.cache.animation !== t ? C.cache.animation : !1;
          }, currentDirection: function currentDirection() {
            return C.is.inward() ? v.inward : v.outward;
          }, direction: function direction() {
            return C.is.hidden() || !C.is.visible() ? v.inward : v.outward;
          }, animationDirection: function animationDirection(e) {
            var i;return e = e || f.animation, "string" == typeof e && (e = e.split(" "), n.each(e, function (n, e) {
              e === v.inward ? i = v.inward : e === v.outward && (i = v.outward);
            })), i ? i : !1;
          }, duration: function duration(n) {
            return n = n || f.duration, n === !1 && (n = A.css("animation-duration") || 0), "string" == typeof n ? n.indexOf("ms") > -1 ? parseFloat(n) : 1e3 * parseFloat(n) : n;
          }, displayType: function displayType(n) {
            return n = n !== t ? n : !0, f.displayType ? f.displayType : (n && A.data(b.displayType) === t && C.can.transition(!0), A.data(b.displayType));
          }, userStyle: function userStyle(n) {
            return n = n || A.attr("style") || "", n.replace(/display.*?;/, "");
          }, transitionExists: function transitionExists(e) {
            return n.fn.transition.exists[e];
          }, animationStartEvent: function animationStartEvent() {
            var n,
                e = i.createElement("div"),
                a = { animation: "animationstart", OAnimation: "oAnimationStart", MozAnimation: "mozAnimationStart", WebkitAnimation: "webkitAnimationStart" };for (n in a) {
              if (e.style[n] !== t) return a[n];
            }return !1;
          }, animationEndEvent: function animationEndEvent() {
            var n,
                e = i.createElement("div"),
                a = { animation: "animationend", OAnimation: "oAnimationEnd", MozAnimation: "mozAnimationEnd", WebkitAnimation: "webkitAnimationEnd" };for (n in a) {
              if (e.style[n] !== t) return a[n];
            }return !1;
          } }, can: { transition: function transition(e) {
            var i,
                a,
                o,
                r,
                s,
                l,
                u = f.animation,
                d = C.get.transitionExists(u),
                c = C.get.displayType(!1);if (d === t || e) {
              if (C.verbose("Determining whether animation exists"), i = A.attr("class"), a = A.prop("tagName"), o = n("<" + a + " />").addClass(i).insertAfter(A), r = o.addClass(u).removeClass(v.inward).removeClass(v.outward).addClass(v.animating).addClass(v.transition).css("animationName"), s = o.addClass(v.inward).css("animationName"), c || (c = o.attr("class", i).removeAttr("style").removeClass(v.hidden).removeClass(v.visible).show().css("display"), C.verbose("Determining final display state", c), C.save.displayType(c)), o.remove(), r != s) C.debug("Direction exists for animation", u), l = !0;else {
                if ("none" == r || !r) return void C.debug("No animation defined in css", u);C.debug("Static animation found", u, c), l = !1;
              }C.save.transitionExists(u, l);
            }return d !== t ? d : l;
          }, animate: function animate() {
            return C.can.transition() !== t;
          } }, is: { animating: function animating() {
            return A.hasClass(v.animating);
          }, inward: function inward() {
            return A.hasClass(v.inward);
          }, outward: function outward() {
            return A.hasClass(v.outward);
          }, looping: function looping() {
            return A.hasClass(v.looping);
          }, occurring: function occurring(n) {
            return n = n || f.animation, n = "." + n.replace(" ", "."), A.filter(n).length > 0;
          }, visible: function visible() {
            return A.is(":visible");
          }, hidden: function hidden() {
            return "hidden" === A.css("visibility");
          }, supported: function supported() {
            return y !== !1;
          } }, hide: function hide() {
          C.verbose("Hiding element"), C.is.animating() && C.reset(), S.blur(), C.remove.display(), C.remove.visible(), C.set.hidden(), C.force.hidden(), f.onHide.call(S), f.onComplete.call(S);
        }, show: function show(n) {
          C.verbose("Showing element", n), C.remove.hidden(), C.set.visible(), C.force.visible(), f.onShow.call(S), f.onComplete.call(S);
        }, toggle: function toggle() {
          C.is.visible() ? C.hide() : C.show();
        }, stop: function stop() {
          C.debug("Stopping current animation"), A.triggerHandler(y);
        }, stopAll: function stopAll() {
          C.debug("Stopping all animation"), C.remove.queueCallback(), A.triggerHandler(y);
        }, clear: { queue: function queue() {
            C.debug("Clearing animation queue"), C.remove.queueCallback();
          } }, enable: function enable() {
          C.verbose("Starting animation"), A.removeClass(v.disabled);
        }, disable: function disable() {
          C.debug("Stopping animation"), A.addClass(v.disabled);
        }, setting: function setting(e, i) {
          if (C.debug("Changing setting", e, i), n.isPlainObject(e)) n.extend(!0, f, e);else {
            if (i === t) return f[e];n.isPlainObject(f[e]) ? n.extend(!0, f[e], i) : f[e] = i;
          }
        }, internal: function internal(e, i) {
          if (n.isPlainObject(e)) n.extend(!0, C, e);else {
            if (i === t) return C[e];C[e] = i;
          }
        }, debug: function debug() {
          !f.silent && f.debug && (f.performance ? C.performance.log(arguments) : (C.debug = Function.prototype.bind.call(console.info, console, f.name + ":"), C.debug.apply(console, arguments)));
        }, verbose: function verbose() {
          !f.silent && f.verbose && f.debug && (f.performance ? C.performance.log(arguments) : (C.verbose = Function.prototype.bind.call(console.info, console, f.name + ":"), C.verbose.apply(console, arguments)));
        }, error: function error() {
          f.silent || (C.error = Function.prototype.bind.call(console.error, console, f.name + ":"), C.error.apply(console, arguments));
        }, performance: { log: function log(n) {
            var e, i, t;f.performance && (e = new Date().getTime(), t = s || e, i = e - t, s = e, l.push({ Name: n[0], Arguments: [].slice.call(n, 1) || "", Element: S, "Execution Time": i })), clearTimeout(C.performance.timer), C.performance.timer = setTimeout(C.performance.display, 500);
          }, display: function display() {
            var e = f.name + ":",
                i = 0;s = !1, clearTimeout(C.performance.timer), n.each(l, function (n, e) {
              i += e["Execution Time"];
            }), e += " " + i + "ms", r && (e += " '" + r + "'"), o.length > 1 && (e += " (" + o.length + ")"), (console.group !== t || console.table !== t) && l.length > 0 && (console.groupCollapsed(e), console.table ? console.table(l) : n.each(l, function (n, e) {
              console.log(e.Name + ": " + e["Execution Time"] + "ms");
            }), console.groupEnd()), l = [];
          } }, invoke: function invoke(e, i, o) {
          var r,
              s,
              l,
              u = p;return i = i || c, o = S || o, "string" == typeof e && u !== t && (e = e.split(/[\. ]/), r = e.length - 1, n.each(e, function (i, a) {
            var o = i != r ? a + e[i + 1].charAt(0).toUpperCase() + e[i + 1].slice(1) : e;if (n.isPlainObject(u[o]) && i != r) u = u[o];else {
              if (u[o] !== t) return s = u[o], !1;if (!n.isPlainObject(u[a]) || i == r) return u[a] !== t ? (s = u[a], !1) : !1;u = u[a];
            }
          })), n.isFunction(s) ? l = s.apply(o, i) : s !== t && (l = s), n.isArray(a) ? a.push(l) : a !== t ? a = [a, l] : l !== t && (a = l), s !== t ? s : !1;
        } }, C.initialize();
    }), a !== t ? a : this;
  }, n.fn.transition.exists = {}, n.fn.transition.settings = { name: "Transition", silent: !1, debug: !1, verbose: !1, performance: !0, namespace: "transition", interval: 0, reverse: "auto", onStart: function onStart() {}, onComplete: function onComplete() {}, onShow: function onShow() {}, onHide: function onHide() {}, useFailSafe: !0, failSafeDelay: 100, allowRepeats: !1, displayType: !1, animation: "fade", duration: !1, queue: !0, metadata: { displayType: "display" }, className: { animating: "animating", disabled: "disabled", hidden: "hidden", inward: "in", loading: "loading", looping: "looping", outward: "out", transition: "transition", visible: "visible" }, error: { noAnimation: "Element is no longer attached to DOM. Unable to animate.  Use silent setting to surpress this warning in production.", repeated: "That animation is already occurring, cancelling repeated animation", method: "The method you called is not defined", support: "This browser does not support CSS animations" } };
}(jQuery, window, document);